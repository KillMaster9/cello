// Copyright 2023 The Cello Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/volcengine/cello/pkg/provider/volcengine/cellohelper (interfaces: InstanceMetadataGetter)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInstanceMetadataGetter is a mock of InstanceMetadataGetter interface
type MockInstanceMetadataGetter struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceMetadataGetterMockRecorder
}

// MockInstanceMetadataGetterMockRecorder is the mock recorder for MockInstanceMetadataGetter
type MockInstanceMetadataGetterMockRecorder struct {
	mock *MockInstanceMetadataGetter
}

// NewMockInstanceMetadataGetter creates a new mock instance
func NewMockInstanceMetadataGetter(ctrl *gomock.Controller) *MockInstanceMetadataGetter {
	mock := &MockInstanceMetadataGetter{ctrl: ctrl}
	mock.recorder = &MockInstanceMetadataGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInstanceMetadataGetter) EXPECT() *MockInstanceMetadataGetterMockRecorder {
	return m.recorder
}

// GetAvailabilityZone mocks base method
func (m *MockInstanceMetadataGetter) GetAvailabilityZone() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAvailabilityZone")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAvailabilityZone indicates an expected call of GetAvailabilityZone
func (mr *MockInstanceMetadataGetterMockRecorder) GetAvailabilityZone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAvailabilityZone", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetAvailabilityZone))
}

// GetInstanceId mocks base method
func (m *MockInstanceMetadataGetter) GetInstanceId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetInstanceId indicates an expected call of GetInstanceId
func (mr *MockInstanceMetadataGetterMockRecorder) GetInstanceId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceId", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetInstanceId))
}

// GetInstanceType mocks base method
func (m *MockInstanceMetadataGetter) GetInstanceType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetInstanceType indicates an expected call of GetInstanceType
func (mr *MockInstanceMetadataGetterMockRecorder) GetInstanceType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceType", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetInstanceType))
}

// GetPrimaryENIId mocks base method
func (m *MockInstanceMetadataGetter) GetPrimaryENIId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrimaryENIId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPrimaryENIId indicates an expected call of GetPrimaryENIId
func (mr *MockInstanceMetadataGetterMockRecorder) GetPrimaryENIId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrimaryENIId", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetPrimaryENIId))
}

// GetPrimaryENIMac mocks base method
func (m *MockInstanceMetadataGetter) GetPrimaryENIMac() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrimaryENIMac")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPrimaryENIMac indicates an expected call of GetPrimaryENIMac
func (mr *MockInstanceMetadataGetterMockRecorder) GetPrimaryENIMac() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrimaryENIMac", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetPrimaryENIMac))
}

// GetRegion mocks base method
func (m *MockInstanceMetadataGetter) GetRegion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRegion indicates an expected call of GetRegion
func (mr *MockInstanceMetadataGetterMockRecorder) GetRegion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegion", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetRegion))
}

// GetVpcId mocks base method
func (m *MockInstanceMetadataGetter) GetVpcId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVpcId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVpcId indicates an expected call of GetVpcId
func (mr *MockInstanceMetadataGetterMockRecorder) GetVpcId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVpcId", reflect.TypeOf((*MockInstanceMetadataGetter)(nil).GetVpcId))
}
